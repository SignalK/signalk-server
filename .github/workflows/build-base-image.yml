name: Build Docker base images

on:
  schedule:
    - cron: "0 0 * * 1"
  workflow_dispatch:

jobs:
  build-arm:
    runs-on: ubuntu-24.04-arm
    strategy:
      matrix:
        os: [22.04, 24.04]

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: signalkci
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.os }}-arm

      - name: Build baseimages
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile_base_${{ matrix.os }}
          platforms: linux/arm64,linux/arm/v7
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: |
            ghcr.io/signalk/signalk-server-base:arm-${{ matrix.os }}
            signalk/signalk-server-base:arm-${{ matrix.os }}

      - name: Modify Dockerfile_rel for testing
        run: |
          sed -i "s/:latest/:arm-${{ matrix.os }}/g" ./docker/Dockerfile_rel

      - name: Build Signal K test docker for arm
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile_rel
          platforms: linux/arm64,linux/arm/v7
          build-args: |
            TAG=latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  build-amd:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [22.04, 24.04]

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: signalkci
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.os }}-amd

      - name: Build baseimages
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile_base_${{ matrix.os }}
          platforms: linux/amd64
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: |
            ghcr.io/signalk/signalk-server-base:amd-${{ matrix.os }}
            signalk/signalk-server-base:amd-${{ matrix.os }}

      - name: Modify Dockerfile_rel for testing
        run: |
          sed -i "s/:latest/:amd-${{ matrix.os }}/g" ./docker/Dockerfile_rel

      - name: Build Signal K test docker for amd
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile_rel
          platforms: linux/amd64
          build-args: |
            TAG=latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  create-and-push-manifest:
    needs: [build-arm, build-amd]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [22.04, 24.04]

    steps:
      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: signalkci
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create and push multi-arch manifest to GHCR and Docker Hub
        uses: int128/docker-manifest-create-action@v2
        with:
          tags: |
            ghcr.io/signalk/signalk-server-base:latest-${{ matrix.os }}
            signalk/signalk-server-base:latest-${{ matrix.os }}
          sources: |
            ghcr.io/signalk/signalk-server-base:amd-${{ matrix.os }}
            ghcr.io/signalk/signalk-server-base:arm-${{ matrix.os }}
            signalk/signalk-server-base:amd-${{ matrix.os }}
            signalk/signalk-server-base:arm-${{ matrix.os }}

  housekeeping:
    needs: create-and-push-manifest
    runs-on: ubuntu-latest

    steps:
      - name: Delete Docker Hub Tag
        env:
          IMAGE_NAME: "signalk/signalk-server-base"
          TAG1: "amd-22.04"
          TAG2: "arm-22.04"
          TAG3: "amd-24.04"
          TAG4: "arm-24.04"
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          TOKEN=$(curl -s -H "Content-Type: application/json" -X POST \
            -d '{"username": "signalkci", "password": "${{ secrets.DOCKERHUB_TOKEN }}"}' \
            https://hub.docker.com/v2/users/login/ | jq -r .token)
          for TAG in $TAG1 $TAG2 $TAG3 $TAG4; do
            curl -X DELETE \
              -H "Authorization: JWT $TOKEN" \
              "https://hub.docker.com/v2/repositories/$IMAGE_NAME/tags/$TAG/"
          done
            
      - name: Remove Docker Image from GHCR
        uses: dataaxiom/ghcr-cleanup-action@v1
        with:
          packages: signalk-server-base
          delete-untagged: true
          delete-tags: amd-22.04,arm-22.04,amd-24.04,arm-24.04
          token: ${{ secrets.GHCR_PAT }} # Need to have delete permission
