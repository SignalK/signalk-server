name: Build official docker release container

on:
  push:
    tags:
    - 'v*'

jobs:
  build_server-admin-ui-dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'
      - run: |
          if [[ "$(npm view @signalk/server-admin-ui-dependencies version)" !=  "$(awk '/version/{gsub(/("|",)/,"",$2);print $2}' packages/server-admin-ui-dependencies/package.json)" ]]; then
            cd packages/server-admin-ui-dependencies
            npm install --package-lock-only
            npm ci && npm cache clean --force
            npm publish --access public
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  build_server-admin-ui:
    runs-on: ubuntu-latest
    needs: build_server-admin-ui-dependencies
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'
      - run: |
          if [[ "$(npm view @signalk/server-admin-ui version)" !=  "$(awk '/version/{gsub(/("|",)/,"",$2);print $2}' packages/server-admin-ui/package.json)" ]]; then
            cd packages/server-admin-ui
            npm install --package-lock-only
            npm ci && npm cache clean --force
            npm publish --access public
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  build_server-api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'
      - run: |
          if [[ "$(npm view @signalk/server-api version)" !=  "$(awk '/version/{gsub(/("|",)/,"",$2);print $2}' packages/server-api/package.json)" ]]; then
            cd packages/server-api
            npm install --package-lock-only
            npm ci && npm cache clean --force
            npm publish --access public
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  build_streams:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'
      - run: |
          if [[ "$(npm view @signalk/streams version)" !=  "$(awk '/version/{gsub(/("|",)/,"",$2);print $2}' packages/streams/package.json)" ]]; then
            cd packages/streams
            npm install --package-lock-only
            npm ci && npm cache clean --force
            npm publish --access public
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  build_signalk-server:
    runs-on: ubuntu-latest
    needs: [build_server-admin-ui, build_server-api, build_streams]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'
      - run: |
          npm install --package-lock-only
          npm ci && npm cache clean --force
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  build_docker_images:
    runs-on: ubuntu-latest
    needs: build_signalk-server
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: signalk/signalk-server
          tag-sha: false # Do not add git short SHA as Docker tag
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: signalkci
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set TAG for build-args
        id: vars
        run: echo ::set-output name=tag::$(echo ${GITHUB_REF#refs/*/} | sed 's/v//g')
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          file: ./docker/Dockerfile_rel
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          images: signalk/signalk-server
          tags: ${{ steps.docker_meta.outputs.tags }}
          build-args: |
            TAG=${{ steps.vars.outputs.tag }}
