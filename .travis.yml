language: node_js
node_js:
- "10"
sudo: required
services:
- docker
jobs:
  include:
  - stage: test
  - stage: build
    if: (type != pull_request) AND (branch = master OR branch = latest OR branch =~ ^v[0-9]+\.[0-9]+\.[0-9]+.*$ )
    install: true
    script:
    - 'echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin'
    - docker build -f Dockerfile -t $REPO_BASE/signalk-server:linux-amd64-"$TRAVIS_BRANCH" .
    - docker push $REPO_BASE/signalk-server:linux-amd64-"$TRAVIS_BRANCH"
  - stage: build
    if: (type != pull_request) AND (branch = master OR branch = latest OR branch =~ ^v[0-9]+\.[0-9]+\.[0-9]+.*$ )
    install: true
    script:
    - 'echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin'
    - docker run --rm --privileged multiarch/qemu-user-static:register --reset
    - mkdir tmp
    - "pushd tmp && curl -L -o qemu-arm-static.tar.gz https://github.com/multiarch/qemu-user-static/releases/download/v4.2.0-6/qemu-arm-static.tar.gz
      && tar xzf qemu-arm-static.tar.gz && popd        \n"
    - docker build -f Dockerfile -t $REPO_BASE/signalk-server:linux-armhf-"$TRAVIS_BRANCH" --build-arg
      IMAGE_BASE=arm32v7/node .
    - docker push $REPO_BASE/signalk-server:linux-armhf-"$TRAVIS_BRANCH"
  - stage: push
    if: (type != pull_request) AND (branch = master OR branch = latest OR branch =~ ^v[0-9]+\.[0-9]+\.[0-9]+.*$ )
    install: true
    script:
    - docker run --rm docker:18.09.6 sh -c "mkdir /root/.docker && echo '{\"experimental\":\"enabled\"}' >/root/.docker/config.json && docker manifest create $REPO_BASE/signalk-server:$TRAVIS_BRANCH $REPO_BASE/signalk-server:linux-armhf-$TRAVIS_BRANCH $REPO_BASE/signalk-server:linux-amd64-$TRAVIS_BRANCH && (echo $DOCKER_PASSWORD |  docker login -u $DOCKER_USERNAME --password-stdin) && docker manifest push $REPO_BASE/signalk-server:$TRAVIS_BRANCH"
env:
  global:
    REPO_BASE=signalk
  matrix:
  - secure: g3O6HBWuwHkctCm80tJG6qCkwqnMbUPk2cZRFvbJDVZXaqp5pXxHUYzw68JoFivhSv0S0DR4KX99voX7HcWwPEr+qX3J8XilfMw3VZ5/qtMdb2XwfVIhvnmKajzssKa/xNPpy1ve0wNIVFx6HM+8o5p1fBn7F9s1zJNnbabz1bI=
